<?php
/**
 * @file
 * Code for the WIM Core feature.
 */

include_once 'wim_core.features.inc';

/**
 * Implements hook_form_alter().
 */
function wim_core_views_bulk_operations_form_alter(&$form, &$form_state, $vbo) {
  if ($form_state['step'] === 'views_bulk_operations_confirm_form') {
    $form['description']['#markup'] = strip_tags($form['description']['#markup'], '<ul><li><div><h3>');
  }
}

/**
 * Implements hook_permission().
 */
function wim_core_permission() {
  return array(
    'publishing options tab' => array(
      'title' => t('Access publishing options tab'),
      'description' => t('User can access promoted and publication date.'),
    ),
    'access taxonomy pages' => array(
      'title' => t('Access taxonomy pages'),
      'description' => t('User can access taxonomy pages like taxonomy/term/[tid].'),
    ),
  );
}

/**
 * Implements hook_menu_alter().
 */
function wim_core_menu_alter(&$items) {
  $items['taxonomy/term/%taxonomy_term']['access arguments'] = array('access taxonomy pages');
  $items['taxonomy/term/%taxonomy_term/feed']['access arguments'] = array('access taxonomy pages');
}

/**
 * Implements hook_entity_info_alter().
 */
function wim_core_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['short'] = array(
    'label' => t('Short'),
    'custom settings' => FALSE,
  );
}

/**
 * Implements hook_image_default_styles().
 */
function wim_core_image_default_styles() {
  $styles = array();

  $styles['teaser'] = array(
    'name' => 'teaser',
    'label' => 'Teaser (150x150)',
    'effects' => array(
      array(
        'module' => 'image',
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 150,
          'height' => 150,
        ),
        'weight' => 0,
      ),
    ),
  );

  $styles['icon'] = array(
    'name' => 'icon',
    'label' => 'Icon (40x40)',
    'effects' => array(
      array(
        'module' => 'image',
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 40,
          'height' => 40,
        ),
        'weight' => 0,
      ),
    ),
  );

  $styles['teaser_mobile'] = array(
    'name' => 'teaser',
    'label' => 'Teaser mobile (430xAUTO)',
    'effects' => array(
      array(
        'module' => 'image',
        'name' => 'image_scale',
        'data' => array(
          'width' => 430,
          'height' => '',
          'upscale' => 0,
        ),
        'weight' => 0,
      ),
    ),
  );

  $styles['teaser_mobile_retina'] = array(
    'name' => 'teaser',
    'label' => 'Teaser retina (860xAUTO)',
    'effects' => array(
      array(
        'module' => 'image',
        'name' => 'image_scale',
        'data' => array(
          'width' => 860,
          'height' => '',
          'upscale' => 0,
        ),
        'weight' => 0,
      ),
    ),
  );

  $styles['list_thumbnail'] = array(
    'name' => 'list_thumbnail',
    'label' => 'List thumbnail (100x100)',
    'effects' => array(
      array(
        'module' => 'image',
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 100,
          'height' => 100,
        ),
        'weight' => 1,
      ),
    ),
  );

  $styles['node_thumbnail'] = array(
    'name' => 'node_thumbnail',
    'label' => 'Node thumbnail (532x225)',
    'effects' => array(
      array(
        'module' => 'image',
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 532,
          'height' => 225,
        ),
        'weight' => 1,
      ),
    ),
  );

  $styles['pictogram'] = array(
    'name' => 'pictogram',
    'label' => 'Pictogram (40x40)',
    'effects' => array(
      array(
        'module' => 'image',
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 40,
          'height' => 40,
        ),
        'weight' => 1,
      ),
    ),
  );

  return $styles;
}

/**
 * Implements hook_form_alter().
 */
function wim_core_form_alter(&$form, &$form_state, $form_id) {
  // @todo remove this when the issue will be fixed and the new version is released.
  // https://www.drupal.org/node/2632640.
  if ($form_id === 'views_form_faq_admin_faq' && isset($form['field_weight_selector'])) {
    foreach ($form['field_weight_selector'] as &$weight_selector) {
      if (isset($weight_selector['weight']['#access'])) {
        $weight_selector['weight']['#access'] = TRUE;
      }
    }
  }

  // Move fields to the settings tab.
  if (isset($form['#node_edit_form']) && $form['#node_edit_form']) {
    // Hide sticky option.
    $form['options']['sticky']['#access'] = FALSE;

    // Move fields to the Publishing options tab.
    foreach (array('field_publication_date', 'field_promoted') as $field_name) {
      if (isset($form[$field_name])) {
        $form['options'][$field_name] = $form[$field_name];
        unset($form[$field_name]);
        // Keep language parameter for the locale module.
        // since it use it.
        $form[$field_name]['#language'] = $form['options'][$field_name]['#language'];
      }
    }
  }

  // Allow to access publishing options tab.
  if (user_access('publishing options tab')) {
    $form['options']['#access'] = TRUE;
  }
  // Move reminder after publishing.
  if (isset($form['#groups']['group_reminder'], $form['field_reminder_email'])) {
    $form['#groups']['group_reminder']->weight = 150;
  }

}

/**
 * Implements hook_cronapi().
 */
function wim_core_cronapi($op, $job = NULL) {

  $items['scheduler'] = array(
    'description' => 'Run scheduler.',
    'rule' => '*/5 * * * *',
  );

  return $items;
}
